import React, { useState, useEffect } from 'react';
import { Sparkles, TrendingUp, CircleUser, BarChart3, Shield, Map, AlertCircle, ChevronDown, Search, Plus, MessageCircle, Check, Zap, PieChart, Mail } from 'lucide-react';

const VertafyApp = () => {
  const colors = {
    primary: '#1E88E5',
    secondary: '#7C4DFF',
    accent1: '#00BFA5',
    accent2: '#FF6E40',
    accent3: '#FFD740',
    dark: '#2C3E50',
    light: '#F5F7FA',
    text: '#37474F',
    textLight: '#FFFFFF',
    success: '#4CAF50',
    warning: '#FFC107',
    error: '#F44336',
  };

  const [activeTab, setActiveTab] = useState('feed');
  const [selectedTopic, setSelectedTopic] = useState(null);
  const [analystQuestion, setAnalystQuestion] = useState('');
  const [submittedQuestions, setSubmittedQuestions] = useState([]);

  useEffect(() => {
    const style = document.createElement('style');
    style.innerHTML = `
      @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
      @import url('https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&display=swap');
    `;
    document.head.appendChild(style);
    return () => document.head.removeChild(style);
  }, []);

  const handleAnalystSubmit = () => {
    if (analystQuestion.trim()) {
      const response = `Action factors based on query: "${analystQuestion}"

- Prioritize regional subsidies in the South to offset high price sensitivity.
- Incentivize local quality labeling in the Northeast.
- Expand sustainability education in the West.
- Adjust premium strategies in the Midwest.`;
      setSubmittedQuestions([{ question: analystQuestion, response }, ...submittedQuestions]);
      setAnalystQuestion('');
    }
  };

  return (
    <div className="flex flex-col h-screen" style={{ fontFamily: 'Inter, sans-serif', backgroundColor: colors.light, color: colors.text }}>
      {/* Header */}
      <header className="py-3 px-6 flex justify-between items-center" style={{ backgroundColor: 'white', borderBottom: '1px solid #e5e7eb' }}>
        <div className="flex items-center">
          <div className="flex items-center">
            <svg viewBox="0 0 24 24" width="24" height="24" fill="none" style={{ color: colors.primary }}>
              <path d="M12 2L2 7L12 12L22 7L12 2Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
              <path d="M2 17L12 22L22 17" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
              <path d="M2 12L12 17L22 12" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
            </svg>
            <h1 className="text-2xl font-bold tracking-tight ml-2" style={{ fontFamily: 'Inter, sans-serif', fontWeight: 700, color: colors.primary, letterSpacing: '-0.02em' }}>vertafy</h1>
          </div>
          <div className="ml-2 py-1 px-2 rounded text-xs font-medium flex items-center" style={{ backgroundColor: `${colors.accent1}20`, color: colors.accent1 }}>
            <Shield size={12} className="mr-1" /> VERIFIED
          </div>
        </div>
        <div className="flex items-center space-x-4">
          <div className="relative cursor-pointer">
            <div className="w-8 h-8 rounded-full flex items-center justify-center text-white" style={{ backgroundColor: colors.secondary }}>
              <Mail size={18} />
            </div>
          </div>
          <div className="relative">
            <div className="w-8 h-8 rounded-full flex items-center justify-center text-white cursor-pointer" style={{ backgroundColor: colors.secondary }}>
              <CircleUser size={20} />
            </div>
            <div className="absolute -bottom-1 -right-1 w-4 h-4 rounded-full border-2 border-white" style={{ backgroundColor: colors.success }}></div>
          </div>
          <div className="text-sm">
            <p className="font-medium">Avery Lee</p>
            <p className="text-gray-500 text-xs">Brand Analyst â€¢ Tier 2</p>
          </div>
        </div>
      </header>

      {/* Dashboard Tab Content */}
      {activeTab === 'dashboard' && (
        <div className="p-6">
          {/* Additional padding fix in Bar Chart section applied here */}
          <div className="grid grid-cols-3 gap-4 mb-6 mt-6">
            <div className="rounded-lg shadow-sm p-4" style={{ backgroundColor: 'white', border: '1px solid #e5e7eb' }}>
              <div className="flex items-center justify-between mb-2">
                <h3 className="text-sm font-medium text-gray-500">Active Participants</h3>
                <Sparkles size={16} style={{ color: colors.primary }} />
              </div>
              <p className="text-2xl font-bold">8,547</p>
              <p className="text-xs mt-1 flex items-center" style={{ color: colors.success }}>
                <TrendingUp size={12} className="mr-1" /> +12% from last week
              </p>
            </div>
            {/* Additional KPI cards... */}
          </div>

          {/* Analyst Query Section */}
          <div className="mt-10 p-6 bg-white rounded-lg shadow-sm border border-gray-200">
            <h3 className="text-lg font-semibold mb-2">Analyst Queries</h3>
            <p className="text-sm text-gray-600 mb-4">Use conversational prompts to generate strategic actions based on current insights.</p>
            <div className="flex mb-4">
              <input
                type="text"
                value={analystQuestion}
                onChange={(e) => setAnalystQuestion(e.target.value)}
                placeholder="e.g. What are key actions per region considering global trade price inflation?"
                className="flex-1 border border-gray-300 rounded-l-md px-4 py-2 text-sm focus:outline-none"
              />
              <button
                onClick={handleAnalystSubmit}
                className="bg-blue-600 text-white px-4 rounded-r-md text-sm hover:bg-blue-700"
              >
                Generate Actions
              </button>
            </div>
            <div className="space-y-4">
              {submittedQuestions.map((entry, index) => (
                <div key={index} className="p-4 border rounded-md bg-gray-50">
                  <p className="text-sm text-gray-800 font-medium mb-1">{entry.question}</p>
                  <pre className="text-xs text-gray-700 whitespace-pre-wrap font-mono">{entry.response}</pre>
                </div>
              ))}
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default VertafyApp;
